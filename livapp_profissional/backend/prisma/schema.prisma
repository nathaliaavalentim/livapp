// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//criar uma migration: yarn prisma migrate dev
model User {
  id          String    @id @default(uuid())
  name        String
  email       String
  password    String
  created_at  DateTime? @default(now())
  updated_ate DateTime? @default(now())

  @@map("users")
}

model Performance {
  id          String    @id @default(uuid())
  aluno_id    String
  username    String
  date       DateTime
  count    Int
  des  Decimal
  key String

  @@map("performance")
}

//Categoria Bebida pode ter v√°rios produtos
model Category {
  id          String    @id @default(uuid())
  name        String
  created_at  DateTime? @default(now())
  updated_ate DateTime? @default(now())
  products    Product[]

  @@map("categories")
}

model Product {
  id          String    @id @default(uuid())
  name        String    
  price       String
  description String?
  banner      String
  created_at  DateTime? @default(now())
  updated_ate DateTime? @default(now())

  category    Category @relation(fields: [category_id], references: [id])
  category_id String
  itens       Item[]
  Order       Order[]
  @@unique([id, name])
  @@map("products")
}

model Order {
  id          String    @id @default(uuid())
  table       Int?
  status      Boolean   @default(false)
  draft       Boolean   @default(false)
  name        String?
  created_at  DateTime? @default(now())
  updated_ate DateTime? @default(now())
  dateSession String?
  schedule String?

  products   Product @relation(fields: [product_id, name_product], references: [id, name]) 
  product_id String  @default(uuid())
  name_product String  
  itens      Item[]

  @@map("orders")
}

model Item {
  id          String    @id @default(uuid())
  amount      Int
  created_at  DateTime? @default(now())
  updated_ate DateTime? @default(now())

  orders     Order   @relation(fields: [order_id], references: [id])
  products   Product @relation(fields: [product_id], references: [id])
  order_id   String
  product_id String

  @@map("itens")
}
